# This is the backend application we are protecting with OpenID Connect
upstream my_echo {
    zone my_echo 64k;
    server httpbin:80;
}

# Custom log format to include the 'sub' claim in the REMOTE_USER field
log_format main_jwt '$remote_addr - $jwt_claim_sub [$time_local] "$request" $status '
                    '$body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for"';

auth_jwt_claim_set $claim_auth0_country https://my.ns/country;

# The frontend server - reverse proxy with OpenID Connect authentication
#
server {
    include conf.d/openid_connect.server_conf; # Authorization code flow and Relying Party processing
    error_log /var/log/nginx/error.log debug;  # Reduce severity level as required

    listen 80; # Use SSL/TLS in production
    listen 443 ssl;

    server_name api-auth0.example.com api-okta.example.com;

    ssl_certificate     conf.d/ssl/api-auth0.example.com.crt;
    ssl_certificate_key conf.d/ssl/api-auth0.example.com.key; 
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;
 
    location / {
        # This site is protected with OpenID Connect
        auth_jwt "" token=$session_jwt;
        error_page 401 = @do_oidc_flow;

        #auth_jwt_key_file $oidc_jwt_keyfile; # Enable when using filename
        auth_jwt_key_request /_jwks_uri; # Enable when using URL

        # Successfully authenticated users are proxied to the backend,
        # with 'sub' claim passed as HTTP header
        proxy_set_header username $jwt_claim_sub;
        proxy_set_header Host $host;
        proxy_set_header auth0country $claim_auth0_country;
        proxy_pass http://my_echo; # The backend site/app
        
        access_log /var/log/nginx/access.log main_jwt;
    }
}

# vim: syntax=nginx
